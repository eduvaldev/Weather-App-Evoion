{"version":3,"sources":["Store/Constants/constants.js","Store/Actions/actions.js","Components/Cart.jsx","Components/Carts.jsx","Components/City.jsx","Components/SearchBar.jsx","App.js","Store/Reducers/Reducer.js","Store/index.js","index.js"],"names":["ADD_CITY_MEDELLIN","SEARCH_CITY","CLOSE_CITY","apiKey","process","Inf","styled","div","InfTop","InfBot","Temp","Cart","name","sys","weather","main","id","dispatch","useDispatch","country","onClick","type","payload","closeCity","src","icon","Math","round","temp","InfoCart","Carts","state","useSelector","cities","map","city","InfoMedellin","TextLight","h4","Title","h1","Main","City","currentCity","useEffect","axios","get","then","res","data","className","temp_min","temp_max","feels_like","humidity","InputSearch","input","Searchbar","useState","search","setSearch","onChange","e","target","value","placeholder","onKeyPress","key","preventDefault","Content","ContLeft","App","initalState","Reducer","action","match","filter","length","concat","st","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.1214e3c2.chunk.js","sourcesContent":["export const ADD_CITY_MEDELLIN = 'ADD_CITY_MEDELLIN';\r\nexport const SEARCH_CITY = 'SEARCH_CITY';\r\nexport const CLOSE_CITY = 'CLOSE_CITY';","import axios from 'axios';\r\nimport { ADD_CITY_MEDELLIN, SEARCH_CITY, CLOSE_CITY } from '../Constants/constants'\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY\r\n\r\nexport function getCityMed(){\r\n  return( dispatch =>{\r\n    axios.get(`http://api.openweathermap.org/data/2.5/weather?q=Medellin&units=metric&appid=${apiKey}`)\r\n          .then( res =>{\r\n            dispatch({\r\n              type: ADD_CITY_MEDELLIN,\r\n              payload: res.data\r\n            })\r\n          })\r\n  })\r\n}\r\n\r\nexport function searchCity(city){\r\n  return( dispatch => {\r\n    axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`)\r\n          .then( res =>{\r\n            dispatch({\r\n              type: SEARCH_CITY,\r\n              payload: res.data\r\n            })\r\n          })\r\n  })\r\n}\r\n\r\nexport function closeCity(id){\r\n  return( dispatch =>{\r\n    dispatch({\r\n      type: CLOSE_CITY,\r\n      payload: id\r\n    })\r\n  })\r\n}","import React from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { closeCity } from '../Store/Actions/actions';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Inf = styled.div`\r\n  width: 330px;\r\n  height: 160px;\r\n  max-height: 160px;\r\n  background-color: white;\r\n  margin-right: 49px;\r\n  margin-bottom: 30px;\r\n  padding: 20px;\r\n  @media (max-width: 900px){\r\n    width: 80%;\r\n    margin: auto;\r\n    margin-bottom: 30px;\r\n  }\r\n  @media (max-width: 600px){\r\n    width: 80%;\r\n    margin: auto;\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nconst InfTop = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  & > button{\r\n    background-color: #DC3545;\r\n    height: 30px;\r\n    width: 30px;\r\n    border: none;\r\n    border-radius: 3px;\r\n    color: white;\r\n    font-weight: 300;\r\n  }\r\n  & > button:hover{\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst InfBot = styled.div`\r\n  display: flex;\r\n  margin-top: 10px;\r\n  & > img{\r\n    width: 90px;\r\n    height: 90px;\r\n  }\r\n`\r\n\r\nconst Temp = styled.div`\r\n  margin-left: 30px;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  & > h1{\r\n    font-size: 45px;\r\n  }\r\n  & > h4{\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  }\r\n`;\r\n\r\nconst Cart = ({name, sys, weather, main, id}) => {\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const cerrar = () =>{dispatch(closeCity(id))} ;\r\n\r\n  return ( \r\n    <Inf>\r\n      <InfTop>\r\n        <div>{name}, {sys.country}</div>\r\n        <button \r\n          onClick = {cerrar}\r\n        >X</button>\r\n      </InfTop>\r\n      <InfBot>\r\n        <img src = {`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}/>\r\n        <Temp>\r\n          <h4>{weather[0].main}</h4>  \r\n          <h1>{Math.round(main.temp)}Â°C</h1>\r\n        </Temp>  \r\n      </InfBot>\r\n    </Inf>\r\n   );\r\n}\r\n \r\nexport default Cart;","import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport Cart from './Cart';\r\nimport styled from 'styled-components'\r\n\r\nconst InfoCart = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  @media (max-width: 600px){\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Carts = () => {\r\n  const state = useSelector(state => state.cities);\r\n\r\n  return ( \r\n    <InfoCart>\r\n      {state.map( city => (\r\n          <Cart\r\n            key={city.id}\r\n            name={city.name}\r\n            sys={city.sys}\r\n            weather={city.weather}\r\n            main={city.main}\r\n            id={city.id}\r\n          />\r\n      ))}\r\n    </InfoCart>\r\n   );\r\n}\r\n \r\nexport default Carts;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getCityMed } from '../Store/Actions/actions'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst InfoMedellin = styled.div`\r\n  background-color: rgb(255, 255, 255, 65%);\r\n  backdrop-filter: blur(10px);\r\n  width: 30%;\r\n  height: 100%;\r\n  padding: 110px 70px 120px 70px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  @media (max-width: 900px){\r\n    width: 40%;\r\n  }\r\n  @media (max-width: 600px){\r\n    width: auto;\r\n    height: 715px;\r\n    padding: 40px 30px;\r\n  }\r\n`\r\n\r\nconst TextLight = styled.h4`\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n\r\n  display: flex;\r\n  & > .info{\r\n    margin-right: 30px;\r\n    width: 50px;\r\n  }\r\n`\r\n\r\nconst Title = styled.h1`\r\n  font-weight: 600;\r\n  font-size: 45px;\r\n`\r\n\r\nconst Main = styled.div`\r\n  display: flex;\r\n  & > img{\r\n    width: 200px; height: 200px;\r\n  }\r\n`;\r\n\r\nconst Temp = styled.div`\r\n  & > h1{\r\n    font-size: 70px;\r\n  }\r\n  & > h4{\r\n    font-size: 25px;\r\n  }\r\n`\r\n\r\nconst City = () => {\r\n  const state = useSelector(state => state.currentCity)\r\n  const dispatch = useDispatch()\r\n  const { name, sys, weather, main } = state\r\n\r\n  useEffect( ()=>{\r\n    dispatch(getCityMed())\r\n  }, [])\r\n\r\n  if( !name || !sys || !weather || !main){\r\n    return(\r\n      <h1> Loading ... </h1>\r\n    )\r\n  }\r\n\r\n  return ( \r\n      <InfoMedellin>\r\n        <TextLight> Current city</TextLight>\r\n        <Title>{name}, {sys.country}</Title>\r\n        <Main>\r\n          <img src = {`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}/>\r\n          <Temp>\r\n            <h1>{Math.round(main.temp)}Â°C</h1>\r\n            <h4>{weather[0].main}</h4>\r\n          </Temp>  \r\n        </Main>\r\n        <TextLight> <p className='info'>{Math.round(main.temp_min)}Â°C</p>  <p>Temp. minimum</p> </TextLight>\r\n        <TextLight> <p className='info'>{Math.round(main.temp_max)}Â°C</p>  <p>Temp. maximun</p> </TextLight>\r\n        <TextLight> <p className='info'>{Math.round(main.feels_like)}Â°C</p>  <p>Feels like</p> </TextLight>\r\n        <TextLight> <p className='info'>{Math.round(main.humidity)}%</p>  <p>Humidity</p> </TextLight>\r\n      </InfoMedellin>\r\n   );\r\n}\r\n \r\nexport default City;","import React, { useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { searchCity } from '../Store/Actions/actions';\r\nimport styled from 'styled-components';\r\n\r\nconst InputSearch = styled.input`\r\n  width: 95%;\r\n  border: none;\r\n  padding: 17px 20px;\r\n  margin-bottom: 100px;\r\n  @media (max-width: 600px){\r\n    width: 100%;\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Searchbar = () => {\r\n\r\n  const [search, setSearch] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e =>{\r\n    setSearch(e.target.value)\r\n  }\r\n\r\n  const onKeyPress = e =>{\r\n    \r\n    if(e.key === 'Enter'){\r\n      e.preventDefault()\r\n      dispatch(searchCity(search))\r\n      setSearch('')\r\n    }\r\n  }\r\n\r\n  return ( \r\n    <form>\r\n      <InputSearch\r\n        onChange={onChange}\r\n        type='text'\r\n        placeholder = 'Search other cities...'\r\n        value={search}\r\n        onKeyPress={onKeyPress}\r\n       />\r\n    </form>\r\n   );\r\n}\r\n \r\nexport default Searchbar;","import React, {Fragment} from 'react';\r\nimport styled from 'styled-components'\r\n\r\nimport Carts from './Components/Carts';\r\nimport City from './Components/City';\r\nimport Searchbar from './Components/SearchBar';\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  @media (max-width: 600px){\r\n    flex-direction: column-reverse;\r\n    height: auto;\r\n  }\r\n`;\r\nconst ContLeft = styled.div`\r\n  width: 72%;\r\n  height: 100%;\r\n  padding: 150px 80px 100px 100px;\r\n  @media (max-width: 900px){\r\n    padding: 150px 80px 100px 100px;\r\n    width: 60%;\r\n  }\r\n  @media (max-width: 600px){\r\n    width: 100%;\r\n    padding: 40px 15px;\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Fragment>\r\n      <Content>\r\n        <ContLeft>\r\n          <Searchbar />\r\n          <Carts />\r\n        </ContLeft>\r\n        <City />\r\n      </Content>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ADD_CITY_MEDELLIN, SEARCH_CITY, CLOSE_CITY } from '../Constants/constants'\r\n\r\nconst initalState = {\r\n  cities: [],\r\n  currentCity: {},\r\n}\r\n\r\nconst Reducer = (state = initalState, action)=>{\r\n  switch( action.type ){\r\n\r\n    case ADD_CITY_MEDELLIN:\r\n      return { ...state, currentCity: action.payload }\r\n\r\n    case SEARCH_CITY:\r\n      var match = state.cities.filter( city => city.id === action.payload.id);\r\n      if(match && match.length > 0 ) return { ...state }\r\n      \r\n      return { ...state, cities: state.cities.concat(action.payload) }\r\n\r\n    case CLOSE_CITY :\r\n      return{\r\n        ...state,\r\n        cities: state.cities.filter( city => city.id !== action.payload)\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default Reducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport Reducer from \"./Reducers/Reducer\";\r\n\r\nexport const st = createStore(\r\n  Reducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css'\r\n\r\nimport App from './App';\r\nimport { st } from './Store/index';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={st}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}